<!DOCTYPE html>
<html>
<head>
  <title><%= title %></title>
  <link rel="stylesheet" type="text/css" href="stylesheets/ng-admin.min.css">
</head>
<body ng-app="meraApp">
  <h1><%= title %></h1>
  <script type="text/javascript" src="javascripts/ng-admin.min.js"></script>
  <script type="text/javascript">
// declare a new module called 'myApp', and make it require the `ng-admin` module as a dependency
var meraApp = angular.module('meraApp', ['ng-admin']);

meraApp.config(['RestangularProvider',
  function(RestangularProvider) {
    RestangularProvider.addFullRequestInterceptor(function(element, operation, what, url, headers, params) {
      if (operation == "getList") {
        // custom filters
        if (params._filters) {
          for (var filter in params._filters) {
            params[filter] = params._filters[filter];
          }
          delete params._filters;
        }
      }
      return {
        params: params
      };
    });
  }
]);

// declare a function to run when the module bootstraps (during the 'config' phase)
meraApp.config(['NgAdminConfigurationProvider',
  function(nga) {
    // create an admin application
    var admin = nga.application('MERA Admin').baseApiUrl('/');

    // admin for model <%= model %>
    var id_field = nga.field('id').label('ID');
    var entity = nga.entity('<').identifier(id_field);

    var purchase_entity_listItems = [
      nga.field('name').label('项目名称').isDetailLink(true),
      nga.field('type', 'choice').label('类型').choices([{
        value: 'channel_ondemand_temp_only',
        label: '直播付费的点播专辑'
      }, {
        value: 'channel_ondemand',
        label: '整个点播专辑'
      }, {
        value: 'channel_ondemand_partial',
        label: '部分点播专辑'
      }, {
        value: 'channel_live',
        label: '直播流'
      }, {
        value: 'program',
        label: '单个节目'
      }, {
        value: 'category',
        label: '整个频道'
      }, {
        value: 'all',
        label: 'VIP会员'
      }]),
      nga.field('entity_id').label('所属内容ID'),
      id_field.editable(false)
    ];

    purchase_entity.listView().title('付费项目列表').fields(purchase_entity_listItems).filters([nga.field('entity_id').label('内容ID')]).perPage(10);
    purchase_entity.creationView().title('新建付费项目').fields(purchase_entity.listView().fields().concat([
      nga.field('image').label('项目配图URL'),
      nga.field('details', 'text').label('套餐说明'),
      nga.field('description').label('付费推荐语'),
      nga.field('parent', 'reference').targetEntity(purchase_entity).targetField(nga.field('name')).label('父项目'),
      nga.field('properties', 'json').label('类型专属属性')
    ]));
    purchase_entity.editionView().title('修改 {{ entry.values.name }}').fields(purchase_entity.creationView().fields().concat([
      nga.field('purchase_items', 'referenced_list')
      .targetEntity(purchase_item)
      .targetReferenceField('purchase_entity_id')
      .targetFields([
        nga.field('name').label('名称').isDetailLink(true),
        nga.field('duration').label('收费时长'),
        nga.field('fee', 'float').label('价格').format('$0.00')
      ])
      .label('套餐配置'),
      nga.field('purchase_entities', 'referenced_list')
      .targetEntity(purchase_entity)
      .targetReferenceField('parent')
      .targetFields([
        nga.field('name').label('名称').isDetailLink(true),
        nga.field('entity_id').label('内容ID')
      ])
      .label('子项目')
    ]));
    purchase_entity.showView().title('{{ entry.values.name }} 详情').fields(purchase_entity.editionView().fields());

    // Localize menu
    admin.menu().getChildByTitle('Purchase Entities').title('付费项目');

    // attach the admin application to the DOM and execute it
    nga.configure(admin);
  }
]);
  </script>
</body>
</html>